
15 ;failure_count_hints
28 ;total_count_hints
0 ;failure_count_hypotheses
0 ;total_count_hypotheses
0 ;failure_count_book_runes
0 ;total_count_book_runes
0 ;failure_count_single_rune
0 ;total_count_single_rune
("/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"
 (APP-ASSOC-REWRITE
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-REWRITE
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :IN-THEORY (ENABLE APPEND CAR-CONS NTH)))))
  (:RULE-CLASSES (:REWRITE))
  (:USED-INDUCTION T)
  (:HINT-SETTING-ALIST
   (((:ENABLE BINARY-APPEND)
     (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
              (BINARY-APPEND X (BINARY-APPEND Y Z)))))
     ((EQUAL (APPEND (APPEND X Y) Z)
             (APPEND X Y Z)))
     NIL NIL
     (DEFTHM APP-ASSOC-REWRITE
       (EQUAL (APPEND (APPEND X Y) Z)
              (APPEND X Y Z))
       :HINTS (("Goal" :IN-THEORY (ENABLE CAR-CONS NTH))))
     ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                  :DIR :SYSTEM)
                    NIL)
      (:ADD-ENABLE-HINT BINARY-APPEND
                        ((BINARY-APPEND . :BUILT-IN)))
      (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                  :DIR :SYSTEM)
                    NIL)
      (:ADD-ENABLE-HINT
       ADE::LEFT-ASSOCIATIVITY-OF-APPEND
       ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND :SYSTEM
                                           . "projects/async/utils.lisp")))))
    ((:ENABLE CAR-CONS)
     (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
              (BINARY-APPEND X (BINARY-APPEND Y Z)))))
     ((EQUAL (APPEND (APPEND X Y) Z)
             (APPEND X Y Z)))
     (((NOT (CONSP X))
       (NOT (EQUAL (BINARY-APPEND (BINARY-APPEND (CDR X) Y)
                                  Z)
                   (BINARY-APPEND (CDR X)
                                  (BINARY-APPEND Y Z))))
       (EQUAL (CAR (CONS (CAR X)
                         (BINARY-APPEND (CDR X) Y)))
              (CAR X))))
     ((IMPLIES (AND (CONSP X)
                    (EQUAL (APPEND (APPEND (CDR X) Y) Z)
                           (APPEND (CDR X) Y Z)))
               (EQUAL (CAR (CONS (CAR X) (APPEND (CDR X) Y)))
                      (CAR X))))
     (DEFTHM APP-ASSOC-REWRITE
       (EQUAL (APPEND (APPEND X Y) Z)
              (APPEND X Y Z))
       :HINTS (("Goal" :IN-THEORY (ENABLE APPEND NTH))))
     ((:ADD-ENABLE-HINT CAR-CONS ((CAR-CONS . :BUILT-IN)))
      (:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                  :DIR :SYSTEM)
                    NIL)
      (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                  :DIR :SYSTEM)
                    NIL)
      (:ADD-ENABLE-HINT
       ADE::LEFT-ASSOCIATIVITY-OF-APPEND
       ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND :SYSTEM
                                           . "projects/async/utils.lisp")))))
    ((:ENABLE NTH)
     :REMOVE
     (DEFTHM APP-ASSOC-REWRITE
       (EQUAL (APPEND (APPEND X Y) Z)
              (APPEND X Y Z))
       :HINTS (("Goal" :IN-THEORY (ENABLE APPEND CAR-CONS)))))))
  (:SYMBOL-TABLE ((NTH . :BUILTIN)
                  (EQUAL . :BUILTIN)
                  (CAR-CONS . :BUILTIN)
                  (BINARY-APPEND . :BUILTIN)
                  (APPEND . :BUILTIN))))
 (APP-ASSOC-BACKWARDS
      (:GOAL (EQUAL (BINARY-APPEND X (BINARY-APPEND Y Z))
                    (BINARY-APPEND (BINARY-APPEND X Y) Z)))
      (:HASH 1794091614)
      (:EXPANSION-STACK NIL)
      (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND X (BINARY-APPEND Y Z))
                              (BINARY-APPEND (BINARY-APPEND X Y)
                                             Z)))))
      (:EVENT (DEFTHM APP-ASSOC-BACKWARDS
                (EQUAL (APPEND X Y Z)
                       (APPEND (APPEND X Y) Z))
                :HINTS (("Goal" :IN-THEORY (ENABLE APPEND CAR-CONS NTH)))))
      (:RULE-CLASSES (:REWRITE))
      (:USED-INDUCTION NIL)
      (:HINT-SETTING-ALIST
           (((:ENABLE BINARY-APPEND)
             :REMOVE
             (DEFTHM APP-ASSOC-BACKWARDS
               (EQUAL (APPEND X Y Z)
                      (APPEND (APPEND X Y) Z))
               :HINTS (("Goal" :IN-THEORY (ENABLE CAR-CONS NTH)))))
            ((:ENABLE CAR-CONS)
             :REMOVE
             (DEFTHM APP-ASSOC-BACKWARDS
               (EQUAL (APPEND X Y Z)
                      (APPEND (APPEND X Y) Z))
               :HINTS (("Goal" :IN-THEORY (ENABLE APPEND NTH)))))
            ((:ENABLE NTH)
             :REMOVE
             (DEFTHM APP-ASSOC-BACKWARDS
               (EQUAL (APPEND X Y Z)
                      (APPEND (APPEND X Y) Z))
               :HINTS (("Goal" :IN-THEORY (ENABLE APPEND CAR-CONS)))))))
      (:SYMBOL-TABLE ((NTH . :BUILTIN)
                      (EQUAL . :BUILTIN)
                      (CAR-CONS . :BUILTIN)
                      (BINARY-APPEND . :BUILTIN)
                      (APPEND . :BUILTIN))))
 (APP-ASSOC-1
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-1
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :IN-THEORY (E/D (APPEND CAR-CONS NTH)
                                            (APP-ASSOC-BACKWARDS))))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:ENABLE BINARY-APPEND)
         :REMOVE
         (DEFTHM APP-ASSOC-1
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (CAR-CONS NTH)
                                           (APP-ASSOC-BACKWARDS))))
           :RULE-CLASSES NIL))
        ((:ENABLE CAR-CONS)
         :REMOVE
         (DEFTHM APP-ASSOC-1
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (APPEND NTH)
                                           (APP-ASSOC-BACKWARDS))))
           :RULE-CLASSES NIL))
        ((:ENABLE NTH)
         :REMOVE
         (DEFTHM APP-ASSOC-1
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (APPEND CAR-CONS)
                                           (APP-ASSOC-BACKWARDS))))
           :RULE-CLASSES NIL))
        ((:DISABLE APP-ASSOC-BACKWARDS)
         :FAIL
         (DEFTHM APP-ASSOC-1
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (APPEND CAR-CONS NTH) NIL)))
           :RULE-CLASSES NIL)
         NIL)))
  (:SYMBOL-TABLE
   ((NTH . :BUILTIN)
    (EQUAL . :BUILTIN)
    (CAR-CONS . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APPEND . :BUILTIN)
    (APP-ASSOC-BACKWARDS
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-2
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-2
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :IN-THEORY (E/D NIL (APP-ASSOC-BACKWARDS))))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST (((:DISABLE APP-ASSOC-BACKWARDS)
                         :FAIL
                         (DEFTHM APP-ASSOC-2
                           (EQUAL (APPEND (APPEND X Y) Z)
                                  (APPEND X Y Z))
                           :RULE-CLASSES NIL)
                         NIL)))
  (:SYMBOL-TABLE
   ((EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-BACKWARDS
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-3
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-3
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :IN-THEORY (E/D NIL (NTH APP-ASSOC-BACKWARDS))))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:DISABLE NTH)
         :REMOVE
         (DEFTHM APP-ASSOC-3
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D NIL (APP-ASSOC-BACKWARDS))))
           :RULE-CLASSES NIL))
        ((:DISABLE APP-ASSOC-BACKWARDS)
         :FAIL
         (DEFTHM APP-ASSOC-3
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D NIL (NTH))))
           :RULE-CLASSES NIL)
         NIL)))
  (:SYMBOL-TABLE
   ((NTH . :BUILTIN)
    (EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-BACKWARDS
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-4
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-4
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :IN-THEORY (E/D (NTH APP-ASSOC-REWRITE) NIL)))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:ENABLE NTH)
         :REMOVE
         (DEFTHM APP-ASSOC-4
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (APP-ASSOC-REWRITE) NIL)))
           :RULE-CLASSES NIL))
        ((:ENABLE APP-ASSOC-REWRITE)
         (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z)))))
         ((EQUAL (APPEND (APPEND X Y) Z)
                 (APPEND X Y Z)))
         NIL NIL
         (DEFTHM APP-ASSOC-4
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :IN-THEORY (E/D (NTH) NIL)))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-ENABLE-HINT ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                            ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                                  :SYSTEM
                                  . "projects/async/utils.lisp")))))))
  (:SYMBOL-TABLE
   ((NTH . :BUILTIN)
    (EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-REWRITE
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-5
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-5
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :USE (APP-ASSOC-4)))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:USE (APP-ASSOC-4))
         (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z)))))
         ((EQUAL (APPEND (APPEND X Y) Z)
                 (APPEND X Y Z)))
         NIL NIL
         (DEFTHM APP-ASSOC-5
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-ENABLE-HINT ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                            ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                                  :SYSTEM
                                  . "projects/async/utils.lisp")))))))
  (:SYMBOL-TABLE
   ((EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-4
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-5B
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-5B
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :USE APP-ASSOC-4))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:USE APP-ASSOC-4)
         (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z)))))
         ((EQUAL (APPEND (APPEND X Y) Z)
                 (APPEND X Y Z)))
         NIL NIL
         (DEFTHM APP-ASSOC-5B
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-ENABLE-HINT ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                            ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                                  :SYSTEM
                                  . "projects/async/utils.lisp")))))))
  (:SYMBOL-TABLE
   ((EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-4
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-6
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                (BINARY-APPEND X (BINARY-APPEND Y Z))))
  (:HASH 38295251)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))))
  (:EVENT (DEFTHM APP-ASSOC-6
            (EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z))
            :HINTS (("Goal" :USE (APP-ASSOC-4 NTH)))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:USE-1 APP-ASSOC-4)
         (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z)))))
         ((EQUAL (APPEND (APPEND X Y) Z)
                 (APPEND X Y Z)))
         NIL NIL
         (DEFTHM APP-ASSOC-6
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :USE (NTH)))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                      :DIR :SYSTEM)
                        NIL)))
        ((:USE-1 NTH)
         :REMOVE
         (DEFTHM APP-ASSOC-6
           (EQUAL (APPEND (APPEND X Y) Z)
                  (APPEND X Y Z))
           :HINTS (("Goal" :USE (APP-ASSOC-4)))
           :RULE-CLASSES NIL))))
  (:SYMBOL-TABLE
   ((NTH . :BUILTIN)
    (EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-4
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-7
    (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z))))
    (:HASH 38295251)
    (:EXPANSION-STACK NIL)
    (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                            (BINARY-APPEND X (BINARY-APPEND Y Z))))))
    (:EVENT (DEFTHM APP-ASSOC-7
              (EQUAL (APPEND (APPEND X Y) Z)
                     (APPEND X Y Z))
              :HINTS (("Goal" :EXPAND ((:FREE (B) (APPEND X B))
                                       (:FREE (A B)
                                              (APPEND (CONS (CAR X) A) B)))))
              :RULE-CLASSES NIL))
    (:RULE-CLASSES NIL)
    (:USED-INDUCTION T)
    (:HINT-SETTING-ALIST
         (((:EXPAND-1 (:FREE (B) (APPEND X B)))
           (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                    (BINARY-APPEND X (BINARY-APPEND Y Z)))))
           ((EQUAL (APPEND (APPEND X Y) Z)
                   (APPEND X Y Z)))
           (((NOT (CONSP X))
             (NOT (EQUAL (BINARY-APPEND (BINARY-APPEND (CDR X) Y)
                                        Z)
                         (BINARY-APPEND (CDR X)
                                        (BINARY-APPEND Y Z))))
             (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                    (BINARY-APPEND X (BINARY-APPEND Y Z)))))
           ((IMPLIES (AND (CONSP X)
                          (EQUAL (APPEND (APPEND (CDR X) Y) Z)
                                 (APPEND (CDR X) Y Z)))
                     (EQUAL (APPEND (APPEND X Y) Z)
                            (APPEND X Y Z))))
           (DEFTHM APP-ASSOC-7
             (EQUAL (APPEND (APPEND X Y) Z)
                    (APPEND X Y Z))
             :HINTS (("Goal" :EXPAND ((:FREE (A B)
                                             (APPEND (CONS (CAR X) A) B)))))
             :RULE-CLASSES NIL)
           ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                        :DIR :SYSTEM)
                          NIL)
            (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                        :DIR :SYSTEM)
                          NIL)))
          ((:EXPAND-1 (:FREE (A B)
                             (APPEND (CONS (CAR X) A) B)))
           ((<GOAL>))
           (<GOAL>)
           (((NOT (CONSP X))
             (NOT (EQUAL (BINARY-APPEND (BINARY-APPEND (CDR X) Y)
                                        Z)
                         (BINARY-APPEND (CDR X)
                                        (BINARY-APPEND Y Z))))
             (EQUAL (BINARY-APPEND (CONS (CAR X) (BINARY-APPEND (CDR X) Y))
                                   Z)
                    (CONS (CAR X)
                          (BINARY-APPEND (BINARY-APPEND (CDR X) Y)
                                         Z)))))
           ((IMPLIES (AND (CONSP X)
                          (EQUAL (APPEND (APPEND (CDR X) Y) Z)
                                 (APPEND (CDR X) Y Z)))
                     (EQUAL (APPEND (CONS (CAR X) (APPEND (CDR X) Y))
                                    Z)
                            (CONS (CAR X)
                                  (APPEND (APPEND (CDR X) Y) Z)))))
           (DEFTHM APP-ASSOC-7
             (EQUAL (APPEND (APPEND X Y) Z)
                    (APPEND X Y Z))
             :HINTS (("Goal" :EXPAND ((:FREE (B) (APPEND X B)))))
             :RULE-CLASSES NIL)
           ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                        :DIR :SYSTEM)
                          NIL)
            (:ADD-LIBRARY (INCLUDE-BOOK "data-structures/no-duplicates"
                                        :DIR :SYSTEM)
                          NIL)))))
    (:SYMBOL-TABLE ((EQUAL . :BUILTIN)
                    (CONS . :BUILTIN)
                    (CAR . :BUILTIN)
                    (BINARY-APPEND . :BUILTIN))))
 (APP-ASSOC-8
  (:GOAL (EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                (BINARY-APPEND U (BINARY-APPEND V W))))
  (:HASH 1738753505)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                          (BINARY-APPEND U (BINARY-APPEND V W))))))
  (:EVENT (DEFTHM APP-ASSOC-8
            (EQUAL (APPEND (APPEND U V) W)
                   (APPEND U V W))
            :HINTS (("Goal" :BY APP-ASSOC-7))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:BY APP-ASSOC-7)
         (((EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                  (BINARY-APPEND U (BINARY-APPEND V W)))))
         ((EQUAL (APPEND (APPEND U V) W)
                 (APPEND U V W)))
         NIL NIL
         (DEFTHM APP-ASSOC-8
           (EQUAL (APPEND (APPEND U V) W)
                  (APPEND U V W))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-ENABLE-HINT ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                            ((ADE::LEFT-ASSOCIATIVITY-OF-APPEND
                                  :SYSTEM
                                  . "projects/async/utils.lisp")))))))
  (:SYMBOL-TABLE
   ((EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-7
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-9
  (:GOAL (IF (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                    (BINARY-APPEND X (BINARY-APPEND Y Z)))
             (EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                    (BINARY-APPEND U (BINARY-APPEND V W)))
           'NIL))
  (:HASH 860229655)
  (:EXPANSION-STACK NIL)
  (:GOAL-CLAUSES (((EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                          (BINARY-APPEND X (BINARY-APPEND Y Z))))
                  ((EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                          (BINARY-APPEND U (BINARY-APPEND V W))))))
  (:EVENT (DEFTHM APP-ASSOC-9
            (AND (EQUAL (APPEND (APPEND X Y) Z)
                        (APPEND X Y Z))
                 (EQUAL (APPEND (APPEND U V) W)
                        (APPEND U V W)))
            :HINTS (("Goal" :USE (APP-ASSOC-7 APP-ASSOC-8 NTH)))
            :RULE-CLASSES NIL))
  (:RULE-CLASSES NIL)
  (:USED-INDUCTION NIL)
  (:HINT-SETTING-ALIST
       (((:USE-1 APP-ASSOC-7)
         (((NOT (EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                       (BINARY-APPEND U (BINARY-APPEND V W))))
           (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                  (BINARY-APPEND X (BINARY-APPEND Y Z)))))
         ((IMPLIES (EQUAL (APPEND (APPEND U V) W)
                          (APPEND U V W))
                   (EQUAL (APPEND (APPEND X Y) Z)
                          (APPEND X Y Z))))
         NIL NIL
         (DEFTHM APP-ASSOC-9
           (AND (EQUAL (APPEND (APPEND X Y) Z)
                       (APPEND X Y Z))
                (EQUAL (APPEND (APPEND U V) W)
                       (APPEND U V W)))
           :HINTS (("Goal" :USE (APP-ASSOC-8 NTH)))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "data-structures/no-duplicates"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)))
        ((:USE-1 APP-ASSOC-8)
         (((NOT (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                       (BINARY-APPEND X (BINARY-APPEND Y Z))))
           (EQUAL (BINARY-APPEND (BINARY-APPEND U V) W)
                  (BINARY-APPEND U (BINARY-APPEND V W)))))
         ((IMPLIES (EQUAL (APPEND (APPEND X Y) Z)
                          (APPEND X Y Z))
                   (EQUAL (APPEND (APPEND U V) W)
                          (APPEND U V W))))
         NIL NIL
         (DEFTHM APP-ASSOC-9
           (AND (EQUAL (APPEND (APPEND X Y) Z)
                       (APPEND X Y Z))
                (EQUAL (APPEND (APPEND U V) W)
                       (APPEND U V W)))
           :HINTS (("Goal" :USE (APP-ASSOC-7 NTH)))
           :RULE-CLASSES NIL)
         ((:ADD-LIBRARY (INCLUDE-BOOK "data-structures/no-duplicates"
                                      :DIR :SYSTEM)
                        NIL)
          (:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                      :DIR :SYSTEM)
                        NIL)))
        ((:USE-1 NTH)
         :REMOVE
         (DEFTHM APP-ASSOC-9
           (AND (EQUAL (APPEND (APPEND X Y) Z)
                       (APPEND X Y Z))
                (EQUAL (APPEND (APPEND U V) W)
                       (APPEND U V W)))
           :HINTS (("Goal" :USE (APP-ASSOC-7 APP-ASSOC-8)))
           :RULE-CLASSES NIL))))
  (:SYMBOL-TABLE
   ((NTH . :BUILTIN)
    (IF . :BUILTIN)
    (EQUAL . :BUILTIN)
    (BINARY-APPEND . :BUILTIN)
    (APP-ASSOC-8
         .
         "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp")
    (APP-ASSOC-7
      .
      "/usr/home/kaufmann/projects/PEARLS/acl2/acl2data/tests/test2.lisp"))))
 (APP-ASSOC-10
      (:GOAL (IMPLIES (TRUE-LISTP X)
                      (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                             (BINARY-APPEND X (BINARY-APPEND Y Z)))))
      (:HASH 2034321332)
      (:EXPANSION-STACK NIL)
      (:GOAL-CLAUSES (((NOT (TRUE-LISTP X))
                       (EQUAL (BINARY-APPEND (BINARY-APPEND X Y) Z)
                              (BINARY-APPEND X (BINARY-APPEND Y Z))))))
      (:EVENT (DEFTHM APP-ASSOC-10
                (IMPLIES (TRUE-LISTP X)
                         (EQUAL (APPEND (APPEND X Y) Z)
                                (APPEND X Y Z)))
                :HINTS (("Goal" :DO-NOT '(SIMPLIFY FERTILIZE GENERALIZE))
                        ("Subgoal *1/3" :DO-NOT NIL)
                        ("Subgoal *1/1" :DO-NOT NIL))
                :RULE-CLASSES NIL))
      (:RULE-CLASSES NIL)
      (:USED-INDUCTION T)
      (:HINT-SETTING-ALIST
           (((:DO-NOT-1 SIMPLIFY)
             :FAIL
             (DEFTHM APP-ASSOC-10
               (IMPLIES (TRUE-LISTP X)
                        (EQUAL (APPEND (APPEND X Y) Z)
                               (APPEND X Y Z)))
               :HINTS (("Goal" :DO-NOT '(FERTILIZE GENERALIZE))
                       ("Subgoal *1/3" :DO-NOT NIL)
                       ("Subgoal *1/1" :DO-NOT NIL))
               :RULE-CLASSES NIL)
             ((:ADD-LIBRARY (INCLUDE-BOOK "std/lists/append"
                                          :DIR :SYSTEM)
                            NIL)
              (:ADD-LIBRARY (INCLUDE-BOOK "kestrel/lists-light/append"
                                          :DIR :SYSTEM)
                            NIL)
              (:ADD-LIBRARY (INCLUDE-BOOK "coi/lists/basic"
                                          :DIR :SYSTEM)
                            NIL)))
            ((:DO-NOT-1 FERTILIZE)
             :REMOVE
             (DEFTHM APP-ASSOC-10
               (IMPLIES (TRUE-LISTP X)
                        (EQUAL (APPEND (APPEND X Y) Z)
                               (APPEND X Y Z)))
               :HINTS (("Goal" :DO-NOT '(SIMPLIFY GENERALIZE))
                       ("Subgoal *1/3" :DO-NOT NIL)
                       ("Subgoal *1/1" :DO-NOT NIL))
               :RULE-CLASSES NIL))
            ((:DO-NOT-1 GENERALIZE)
             :REMOVE
             (DEFTHM APP-ASSOC-10
               (IMPLIES (TRUE-LISTP X)
                        (EQUAL (APPEND (APPEND X Y) Z)
                               (APPEND X Y Z)))
               :HINTS (("Goal" :DO-NOT '(SIMPLIFY FERTILIZE))
                       ("Subgoal *1/3" :DO-NOT NIL)
                       ("Subgoal *1/1" :DO-NOT NIL))
               :RULE-CLASSES NIL))))
      (:SYMBOL-TABLE ((TRUE-LISTP . :BUILTIN)
                      (IMPLIES . :BUILTIN)
                      (EQUAL . :BUILTIN)
                      (BINARY-APPEND . :BUILTIN)))))
