/*
 * generated by Xtext 2.30.0
 */
package org.neu.acl2.handproof.formatting2;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractJavaFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.formatting2.IHiddenRegionFormatter;
import org.eclipse.xtext.formatting2.regionaccess.IEObjectRegion;
import org.eclipse.xtext.formatting2.regionaccess.ISemanticRegion;
import org.neu.acl2.handproof.handProof.ContractCompletionSection;
import org.neu.acl2.handproof.handProof.DefineC;
import org.neu.acl2.handproof.handProof.HandProofPackage;
import org.neu.acl2.handproof.handProof.OptionallyDottedSExpList;
import org.neu.acl2.handproof.handProof.ProofDocument;
import org.neu.acl2.handproof.handProof.Property;
import org.neu.acl2.handproof.handProof.SExpression;

public class HandProofFormatter extends AbstractJavaFormatter {

//	protected void format(ProofDocument proofDocument, IFormattableDocument doc) {
//		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		for (EObject eObject : proofDocument.getProofsAndStatements()) {
//			doc.format(eObject);
//		}
//	}
//
//	protected void format(ContractCompletionSection contractCompletionSection, IFormattableDocument doc) {
//		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
//		doc.format(contractCompletionSection.getExpression());
//	}
//	
//	// TODO: implement for ExportationSection, Proof, ProofBody, ProofList, TerminationProof, Goal, Context, DerivedContext, contextItem, dcontextItem, TermProofCase, LemmaHint, HintList, Proofheader, ProofBy, DefineC, DefunC, Property, InputContract, OutputContract, PropertySExp, DefineCSExp, DefunCSExp, OptionallyDottedSExpListExpr, QuotedSExpressionExpr, BackquotedSExpressionExpr, CommaSExpression, SExpList, OptionallyDottedSExpList
//	protected void format(DefineC definec, IFormattableDocument doc) {
//		regionFor(definec.getBody().get(0));
//		regionFor(definec.getBody().get(definec.getBody().size() - 1));
//		for(SExpression sexp : definec.getBody()) {
//			
////			IEObjectRegion sexpRegion = regionForEObject(sexp);
////			sexpRegion.
////			doc.prepend(regionFor(sexp)., this::indent);
//		}
//		doc.surround(regionFor(definec).feature(HandProofPackage.Literals.DEFINE_C__BODY), this::indent);
//	}
//	
//	protected void format(Property prop, IFormattableDocument doc) {
//		doc.surround(regionFor(prop).feature(HandProofPackage.Literals.PROPERTY__BODY), this::indent);
//	}
//	
//	protected void format(OptionallyDottedSExpList sexpList, IFormattableDocument doc) {
//	}
}
